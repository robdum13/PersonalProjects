int _tmain(int argc, _TCHAR* argv[]) {
    char* filePath;

    // Get the current working directory: 
    if ((filePath = _getcwd(NULL, 0)) == NULL) {
        perror("_getcwd error");
        return (-1);
    }

    char* sampleFileName = "\\ContentDescriptor.txt";
    strncat(filePath, sampleFileName, strlen(sampleFileName));

    printf("Reading file %s \n\n", filePath);

    HANDLE hFile = CreateFile(filePath, GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);

    if (hFile == INVALID_HANDLE_VALUE) {
        printf("Unable to open file \"%s\" for read.\n", filePath);
        return (-1);
    }

    DWORD dwNumToRead = GetFileSize(hFile, NULL);
    DWORD dwNumRead;
    char* dwBuffer = new char[dwNumToRead];

    if (FALSE == ReadFile(hFile, dwBuffer, dwNumToRead - 1, &dwNumRead, NULL)) {
        printf("Unable to read from file.\n");
        CloseHandle(hFile);
        return (-1);
    }

    if (dwNumRead > 0 && dwNumRead <= dwNumToRead - 1) {
        dwBuffer[dwNumRead] = '\0'; // NULL character

        printf("Data from file: \n\n%s\n", dwBuffer);
    }

    BOOL bResult = CloseHandle(hFile);

    std::vector<Item> items = readContentDescriptor(filePath);
    displayContents(items);

    printf("\nPress any key to continue...");
    _getch();
    return 0;
}
